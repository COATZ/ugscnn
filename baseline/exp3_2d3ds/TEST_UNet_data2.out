%s Namespace(test_batch_size=16, no_cuda=False, seed=1, mesh_folder='../../mesh_files', ckpt='logs/log_unet_f16_cv3_rgbd_data2/checkpoint_latest.pth.tar_UNet_200.pth.tar', data_folder='data2', feat=16, export_file='samples.npz', in_ch='rgbd', fold=3, model='UNet')
=> loading checkpoint 'logs/log_unet_f16_cv3_rgbd_data2/checkpoint_latest.pth.tar_UNet_200.pth.tar'
=> loaded checkpoint 'logs/log_unet_f16_cv3_rgbd_data2/checkpoint_latest.pth.tar_UNet_200.pth.tar' (epoch 200 loss 0.318) 
DataParallel(
  (module): UNet(
    (enc1): _EncoderBlock(
      (encode): Sequential(
        (0): Conv2d(4, 16, kernel_size=(3, 3), stride=(1, 1))
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      )
    )
    (enc2): _EncoderBlock(
      (encode): Sequential(
        (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      )
    )
    (enc3): _EncoderBlock(
      (encode): Sequential(
        (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      )
    )
    (enc4): _EncoderBlock(
      (encode): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Dropout(p=0.5, inplace=False)
        (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      )
    )
    (center): _DecoderBlock(
      (decode): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): ConvTranspose2d(256, 128, kernel_size=(2, 2), stride=(2, 2))
      )
    )
    (dec4): _DecoderBlock(
      (decode): Sequential(
        (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1))
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): ConvTranspose2d(128, 64, kernel_size=(2, 2), stride=(2, 2))
      )
    )
    (dec3): _DecoderBlock(
      (decode): Sequential(
        (0): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): ConvTranspose2d(64, 32, kernel_size=(2, 2), stride=(2, 2))
      )
    )
    (dec2): _DecoderBlock(
      (decode): Sequential(
        (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): ConvTranspose2d(32, 16, kernel_size=(2, 2), stride=(2, 2))
      )
    )
    (dec1): Sequential(
      (0): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1))
      (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1))
      (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
    )
    (final): Conv2d(16, 15, kernel_size=(1, 1), stride=(1, 1))
  )
)
[ 4686861.  5296597.  6396249. 11366362.  3553817. 14646341.  7326811.
 18276537. 10899007.   376683.  3992905. 41392511.  3553954.]
[Epoch 0 test stats]: MIoU: 0.3063; Mean Accuracy: 0.4253; Avg loss: 0.1843
     beam     board    bookcase    ceiling     chair    clutter     column      door     floor      sofa     table      wall    window
---------  --------  ----------  ---------  --------  ---------  ---------  --------  --------  --------  --------  --------  --------
0.0287537  0.255446    0.136103   0.665053  0.256685   0.251977  0.0201952  0.412718  0.687727  0.175112  0.367932  0.512505  0.212056
